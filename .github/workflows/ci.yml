name: CI

on:
  push:
    branches: [ main ]
    paths:
      - "api/**"
      - "docs/api/**"
      - ".github/workflows/ci.yml"
  pull_request:
    paths:
      - "api/**"
      - "docs/api/**"
      - ".github/workflows/ci.yml"
  workflow_dispatch:

jobs:
  openapi:
    name: OpenAPI lint and diff
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Lint spec with Redocly
        run: npx -y @redocly/cli@1.29.0 lint docs/api/openapi.yaml
      - name: Lint spec with Spectral
        run: npx -y @stoplight/spectral-cli@6.11.1 lint docs/api/openapi.yaml
      - name: Prepare base spec for breaking-change diff
        run: |
          git fetch origin main
          git show origin/main:docs/api/openapi.yaml > /tmp/base-openapi.yaml || echo "no base"
      - name: Breaking-change check (oasdiff)
        if: ${{ hashFiles('/tmp/base-openapi.yaml') != '' }}
        run: npx -y oasdiff@4.0.5 breaking /tmp/base-openapi.yaml docs/api/openapi.yaml --fail-on-diff

  api:
    name: API checks
    runs-on: self-hosted
    needs: [openapi]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: phpgrc_test
          MYSQL_USER: phpgrc
          MYSQL_PASSWORD: secret
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    defaults:
      run:
        working-directory: api

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, intl, pdo_mysql, dom, xml, pcntl, posix
          coverage: none
          tools: composer:v2

      - name: Assert parallel prerequisites
        run: |
          php -r 'echo "disable_functions=",ini_get("disable_functions"),PHP_EOL;'
          php -r 'echo "proc_open:",function_exists("proc_open")?"ok":"DISABLED",PHP_EOL;'
          php -r 'echo "pcntl:",extension_loaded("pcntl")?"on":"off",PHP_EOL;'
          php -r 'echo "xdebug:",extension_loaded("xdebug")?"on":"off",PHP_EOL;'

      - name: Install MySQL client
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: Prepare Laravel dirs
        run: |
          mkdir -p bootstrap/cache \
            storage/app \
            storage/framework/cache storage/framework/sessions storage/framework/views \
            storage/logs
          touch .env

      - name: Composer cache
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('api/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install deps
        run: composer install --no-interaction --prefer-dist

      - name: Wait for MySQL and provision test DB
        env:
          MYSQL_PWD: root
        run: |
          for i in {1..30}; do
            mysql -h 127.0.0.1 -uroot -e "SELECT 1" && break
            sleep 2
          done
          mysql -h 127.0.0.1 -uroot -e "CREATE DATABASE IF NOT EXISTS phpgrc_test CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;"
          mysql -h 127.0.0.1 -uroot -e "CREATE USER IF NOT EXISTS 'phpgrc'@'%' IDENTIFIED BY 'secret';"
          mysql -h 127.0.0.1 -uroot -e "GRANT ALL ON phpgrc_test.* TO 'phpgrc'@'%'; FLUSH PRIVILEGES;"

      - name: Pint
        run: vendor/bin/pint -v

      - name: PHPStan
        run: vendor/bin/phpstan analyse --memory-limit=-1

      - name: Psalm
        env:
          APP_ENV: testing
          APP_DEBUG: "true"
          APP_KEY: base64:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: "3306"
          DB_DATABASE: phpgrc_test
          DB_USERNAME: phpgrc
          DB_PASSWORD: secret
          CACHE_DRIVER: array
          SESSION_DRIVER: array
          QUEUE_CONNECTION: sync
        run: |
          THREADS=$(nproc --all || echo 4)
          vendor/bin/psalm --threads="$THREADS" --scan-threads="$THREADS" --no-diff --long-progress

      - name: Migrate (testing)
        env:
          APP_ENV: testing
          APP_DEBUG: "true"
          APP_KEY: base64:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: "3306"
          DB_DATABASE: phpgrc_test
          DB_USERNAME: phpgrc
          DB_PASSWORD: secret
          CACHE_DRIVER: array
          SESSION_DRIVER: array
          QUEUE_CONNECTION: sync
        run: php artisan migrate --no-interaction --force

      - name: PHPUnit
        env:
          APP_ENV: testing
          APP_DEBUG: "true"
          APP_KEY: base64:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: "3306"
          DB_DATABASE: phpgrc_test
          DB_USERNAME: phpgrc
          DB_PASSWORD: secret
          CACHE_DRIVER: array
          SESSION_DRIVER: array
          QUEUE_CONNECTION: sync
        run: vendor/bin/phpunit
