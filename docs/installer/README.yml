# @phpgrc:/docs/installer/README.md
title: "phpGRC Installer & Setup Wizard — Planning Readme"
purpose: >
  Orient contributors to CORE-001 Bootstrap Installer & first-run Setup Wizard
  planning deliverables. Summarizes scope, constraints, file map, and review
  gates for Phase 1 (planning + stubs scaffold only).

scope:
  phase: 1
  description: |
    - Produce planning artifacts and non-functional stubs only.
    - Only DB connection configuration is stored on disk at
      `/opt/phpgrc/shared/config.php`.
    - All other settings persist in the DB (system of record).
    - Redirect-to-setup behavior and all functional code are deferred
      to later implementation phases per ROADMAP.

acceptance_criteria:
  - Instruction Preamble drafted and aligned with Charter/Backlog/Playbook
  - Wizard step list, API contracts, payload schemas, error taxonomy,
    and atomic-write protocol specified
  - Minimal file stubs listed with paths and purposes (no logic yet)
  - Security, idempotency, and resume semantics defined for future code

non_goals:
  - No working controllers, services, or UI logic
  - No DB migrations beyond listing their planned filenames/locations
  - No SPA routing beyond route naming and sequencing
  - No systemd/services or installer automation beyond doc/spec

file_map:
  docs:
    - /docs/installer/CORE-001.md  # canonical planning spec (source of truth)
    - /docs/installer/README.md    # this overview file
  stubs:
    scripts:
      - /scripts/install/bootstrap.sh
    api_controllers:
      - /api/app/Http/Controllers/Setup/SetupStatusController.php
      - /api/app/Http/Controllers/Setup/DbController.php
      - /api/app/Http/Controllers/Setup/AppKeyController.php
      - /api/app/Http/Controllers/Setup/SchemaController.php
      - /api/app/Http/Controllers/Setup/AdminController.php
      - /api/app/Http/Controllers/Setup/AdminMfaController.php
      - /api/app/Http/Controllers/Setup/SmtpController.php
      - /api/app/Http/Controllers/Setup/IdpController.php
      - /api/app/Http/Controllers/Setup/FinishController.php
    services:
      - /api/app/Services/Setup/ConfigFileWriter.php
    models:
      - /api/app/Models/Setting.php
    middleware:
      - /api/app/Http/Middleware/SetupGuard.php
    routes:
      - /api/routes/api.php
    migrations:
      - /api/database/migrations/...create_core_settings_table.php
      - /api/database/migrations/...create_users_and_auth_tables.php
    web_routes:
      - /web/src/routes/setup/Db.tsx
      - /web/src/routes/setup/AppKey.tsx
      - /web/src/routes/setup/Schema.tsx
      - /web/src/routes/setup/Admin.tsx
      - /web/src/routes/setup/AdminMfa.tsx
      - /web/src/routes/setup/Smtp.tsx
      - /web/src/routes/setup/Idp.tsx
      - /web/src/routes/setup/Branding.tsx
      - /web/src/routes/setup/Finish.tsx
      - /web/src/routes/setup/index.ts

review_and_guardrails:
  - Charter v1.1 — DB-as-system-of-record; stateless app; modularity
  - BACKLOG — CORE-001 acceptance criteria
  - Playbook — instruction preamble, full-file outputs only, deterministic mode
  note: "CI/guardrails exist but should skip gracefully while /api and /web are empty."

roles_and_decision_process:
  maintainer_approval: required
  scope_change: requires ADR in /docs/DECISIONS

next_steps:
  - Generate non-functional files with headers and TODO blocks (done)
  - Wire /api/routes/api.php placeholders to reserved paths (deferred)
  - Defer functional wiring, DB I/O, and SPA navigation until Phase 2
